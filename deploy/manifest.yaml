apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: tungstenfabric-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - tungstenfabric-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - cassandra.tungstenfabric.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - zookeeper.tungstenfabric.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rabbitmq.tungstenfabric.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - redis.tungstenfabric.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - config.tungstenfabric.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - tf.tungstenfabric.io
  resources:
  - '*'
  - cassandraclusters
  - zookeeperclusters
  - rabbitmqclusters
  - configclusters
  - analyticsclusters
  - controlclusters
  - kubemanagerclusters
  - vrouters
  verbs:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tungstenfabric-operator
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tungstenfabric-operator
subjects:
- kind: ServiceAccount
  name: tungstenfabric-operator
roleRef:
  kind: Role
  name: tungstenfabric-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: cassandraclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: CassandraCluster
    listKind: CassandraClusterList
    plural: cassandraclusters
    singular: cassandracluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cqlport:
              type: string
            hostnetwork:
              type: boolean
            image:
              type: string
            imagepullpolicy:
              type: string
            jmxport:
              type: string
            listenaddress:
              type: string
            port:
              type: string
            size:
              format: int32
              type: integer
            sslstorageport:
              type: string
            startrpc:
              type: string
            storageport:
              type: string
          required:
          - size
          - hostnetwork
          - imagepullpolicy
          - startrpc
          - listenaddress
          - port
          - cqlport
          - sslstorageport
          - storageport
          - jmxport
          type: object
        status:
          properties:
            nodes:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: ConfigCluster
    listKind: ConfigClusterList
    plural: configclusters
    singular: configcluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            aaamode:
              type: string
            apiImage:
              type: string
            apiintrospectionport:
              type: string
            apiport:
              type: string
            authmode:
              type: string
            cassandraClusterName:
              type: string
            cloudadminrole:
              type: string
            deviceManagerImage:
              type: string
            globalreadonlyrole:
              type: string
            hostnetwork:
              type: boolean
            image:
              type: string
            imagepullpolicy:
              type: string
            nodeInitImage:
              type: string
            nodeManagerImage:
              type: string
            rabbitmqClusterName:
              type: string
            schemaTransformerImage:
              type: string
            serviceMonitorImage:
              type: string
            size:
              format: int32
              type: integer
            statusImage:
              type: string
            zookeeperClusterName:
              type: string
          required:
          - size
          - hostnetwork
          - imagepullpolicy
          type: object
        status:
          properties:
            nodes:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: controlclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: ControlCluster
    listKind: ControlClusterList
    plural: controlclusters
    singular: controlcluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kubemanagerclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: KubemanagerCluster
    listKind: KubemanagerClusterList
    plural: kubemanagerclusters
    singular: kubemanagercluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: rabbitmqclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: RabbitmqCluster
    listKind: RabbitmqClusterList
    plural: rabbitmqclusters
    singular: rabbitmqcluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cookie:
              type: string
            hostnetwork:
              type: boolean
            image:
              type: string
            imagepullpolicy:
              type: string
            port:
              type: string
            size:
              format: int32
              type: integer
          required:
          - size
          - hostnetwork
          - imagepullpolicy
          - port
          - cookie
          type: object
        status:
          properties:
            nodes:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: redisclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: RedisCluster
    listKind: RedisClusterList
    plural: redisclusters
    singular: rediscluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            hostnetwork:
              type: boolean
            image:
              type: string
            imagepullpolicy:
              type: string
            size:
              format: int32
              type: integer
          required:
          - size
          - hostnetwork
          - imagepullpolicy
          type: object
        status:
          properties:
            nodes:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vrouters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: Vrouter
    listKind: VrouterList
    plural: vrouters
    singular: vrouter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: zookeeperclusters.tf.tungstenfabric.io
spec:
  group: tf.tungstenfabric.io
  names:
    kind: ZookeeperCluster
    listKind: ZookeeperClusterList
    plural: zookeeperclusters
    singular: zookeepercluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            hostnetwork:
              type: boolean
            image:
              type: string
            imagepullpolicy:
              type: string
            size:
              format: int32
              type: integer
            zookeeperport:
              type: string
            zookeeperports:
              type: string
          required:
          - size
          - hostnetwork
          - imagepullpolicy
          - zookeeperport
          - zookeeperports
          type: object
        status:
          properties:
            nodes:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tungstenfabric-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: tungstenfabric-operator
  template:
    metadata:
      labels:
        name: tungstenfabric-operator
    spec:
      nodeSelector:
          node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: tungstenfabric-operator
      containers:
        - name: tungstenfabric-operator
          # Replace this with the built image name
          image: docker.io/michaelhenkel/tungstenfabric-operator:v0.0.1
          command:
          - tungstenfabric-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "tungstenfabric-operator"
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: CassandraCluster
metadata:
  name: cassandra-cluster-1
spec:
  # Add fields here
  size: 1
  hostnetwork: false
  image: "docker.io/michaelhenkel/contrail-external-cassandra:5.1.1-dev3"
  imagepullpolicy: "Always"
  startrpc: "true"
  listenaddress: "auto"
  port: "9160"
  cqlport: "9042"
  sslstorageport: "7001"
  storageport: "7000"
  jmxport: "7199"
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: ConfigCluster
metadata:
  name: config-cluster-1
spec:
  size: 1
  hostnetwork: false
  imagepullpolicy: "Always"
  apiImage: "docker.io/michaelhenkel/contrail-controller-config-api:5.1.1-dev3"
  deviceManagerImage: "docker.io/michaelhenkel/contrail-controller-config-devicemgr:5.1.1-dev3"
  schemaTransformerImage: "docker.io/michaelhenkel/contrail-controller-config-schema:5.1.1-dev3"
  serviceMonitorImage: "docker.io/michaelhenkel/contrail-controller-config-svcmonitor:5.1.1-dev3"
  analyticsApiImage: "docker.io/michaelhenkel/contrail-analytics-api:5.1.1-dev3"
  collectorImage: "docker.io/michaelhenkel/contrail-analytics-collector:5.1.1-dev3"
  nodeManagerImage: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev3"
  nodeInitImage: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev3"
  statusImage: "docker.io/michaelhenkel/contrail-status:5.1.1-dev3"
  cassandraClusterName: "cassandra-cluster-1"
  zookeeperClusterName: "zookeeper-cluster-1"
  rabbitmqClusterName: "rabbitmq-cluster-1"
  configClusterName: "config-cluster-1"

---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: ControlCluster
metadata:
  name: control-cluster-1
spec:
  # Add fields here
  size: 1
  hostnetwork: false
  imagepullpolicy: "Always"
  controlImage: "docker.io/michaelhenkel/contrail-controller-control-control:5.1.1-dev3"
  namedImage: "docker.io/michaelhenkel/contrail-controller-control-named:5.1.1-dev3"
  dnsImage: "docker.io/michaelhenkel/contrail-controller-control-dns:5.1.1-dev3"
  nodeManagerImage: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev3"
  nodeInitImage: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev3"
  statusImage: "docker.io/michaelhenkel/contrail-status:5.1.1-dev3"
  cassandraClusterName: "cassandra-cluster-1"
  rabbitmqClusterName: "rabbitmq-cluster-1"
  configClusterName: "config-cluster-1"
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: KubemanagerCluster
metadata:
  name: example-kubemanagercluster
spec:
  # Add fields here
  size: 3
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: RabbitmqCluster
metadata:
  name: rabbitmq-cluster-1
spec:
  # Add fields here
  size: 1
  hostnetwork: false
  image: "docker.io/michaelhenkel/contrail-external-rabbitmq:5.1.1-dev3"
  port: "5673"
  cookie: "47EFF3BB-4786-46E0-A5BB-58455B3C2CB4"
  imagepullpolicy: "Always"
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: RedisCluster
metadata:
  name: redis-cluster-1
spec:
  # Add fields here
  size: 1
  hostnetwork: false
  image: "docker.io/michaelhenkel/contrail-external-redis:5.1.1-dev3"
  imagepullpolicy: "Always"
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: Vrouter
metadata:
  name: example-vrouter
spec:
  # Add fields here
  size: 3
---
apiVersion: tf.tungstenfabric.io/v1alpha1
kind: ZookeeperCluster
metadata:
  name: zookeeper-cluster-1
spec:
  size: 1
  hostnetwork: false
  image: "docker.io/michaelhenkel/contrail-external-zookeeper:5.1.1-dev3"
  imagepullpolicy: "Always"
  zookeeperport: "2181"
  zookeeperports: "2888:3888"

// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
<<<<<<< HEAD
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraCluster":       schema_pkg_apis_tf_v1alpha1_CassandraCluster(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterSpec":   schema_pkg_apis_tf_v1alpha1_CassandraClusterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterStatus": schema_pkg_apis_tf_v1alpha1_CassandraClusterStatus(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigCluster":          schema_pkg_apis_tf_v1alpha1_ConfigCluster(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterSpec":      schema_pkg_apis_tf_v1alpha1_ConfigClusterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterStatus":    schema_pkg_apis_tf_v1alpha1_ConfigClusterStatus(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqCluster":        schema_pkg_apis_tf_v1alpha1_RabbitmqCluster(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterSpec":    schema_pkg_apis_tf_v1alpha1_RabbitmqClusterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterStatus":  schema_pkg_apis_tf_v1alpha1_RabbitmqClusterStatus(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisCluster":           schema_pkg_apis_tf_v1alpha1_RedisCluster(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterSpec":       schema_pkg_apis_tf_v1alpha1_RedisClusterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterStatus":     schema_pkg_apis_tf_v1alpha1_RedisClusterStatus(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperCluster":       schema_pkg_apis_tf_v1alpha1_ZookeeperCluster(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterSpec":   schema_pkg_apis_tf_v1alpha1_ZookeeperClusterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterStatus": schema_pkg_apis_tf_v1alpha1_ZookeeperClusterStatus(ref),
	}
}

func schema_pkg_apis_tf_v1alpha1_CassandraCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CassandraCluster is the Schema for the cassandraclusters API",
=======
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfig":       schema_pkg_apis_tf_v1alpha1_TungstenfabricConfig(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigSpec":   schema_pkg_apis_tf_v1alpha1_TungstenfabricConfigSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigStatus": schema_pkg_apis_tf_v1alpha1_TungstenfabricConfigStatus(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.Vrouter":                    schema_pkg_apis_tf_v1alpha1_Vrouter(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterSpec":                schema_pkg_apis_tf_v1alpha1_VrouterSpec(ref),
		"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterStatus":              schema_pkg_apis_tf_v1alpha1_VrouterStatus(ref),
	}
}

func schema_pkg_apis_tf_v1alpha1_TungstenfabricConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "TungstenfabricConfig is the Schema for the tungstenfabricconfigs API",
>>>>>>> v0.0.4
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
<<<<<<< HEAD
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterSpec"),
=======
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigSpec"),
>>>>>>> v0.0.4
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
<<<<<<< HEAD
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterStatus"),
=======
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigStatus"),
>>>>>>> v0.0.4
						},
					},
				},
			},
		},
		Dependencies: []string{
<<<<<<< HEAD
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.CassandraClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_CassandraClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CassandraClusterSpec defines the desired state of CassandraCluster",
=======
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.TungstenfabricConfigStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_TungstenfabricConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "TungstenfabricConfigSpec defines the desired state of TungstenfabricConfig",
>>>>>>> v0.0.4
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

<<<<<<< HEAD
func schema_pkg_apis_tf_v1alpha1_CassandraClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CassandraClusterStatus defines the observed state of CassandraCluster",
=======
func schema_pkg_apis_tf_v1alpha1_TungstenfabricConfigStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "TungstenfabricConfigStatus defines the observed state of TungstenfabricConfig",
>>>>>>> v0.0.4
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

<<<<<<< HEAD
func schema_pkg_apis_tf_v1alpha1_ConfigCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigCluster is the Schema for the configclusters API",
=======
func schema_pkg_apis_tf_v1alpha1_Vrouter(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Vrouter is the Schema for the vrouters API",
>>>>>>> v0.0.4
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
<<<<<<< HEAD
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterSpec"),
=======
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterSpec"),
>>>>>>> v0.0.4
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
<<<<<<< HEAD
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterStatus"),
=======
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterStatus"),
>>>>>>> v0.0.4
						},
					},
				},
			},
		},
		Dependencies: []string{
<<<<<<< HEAD
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ConfigClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_ConfigClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigClusterSpec defines the desired state of ConfigCluster",
=======
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.VrouterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_VrouterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VrouterSpec defines the desired state of Vrouter",
>>>>>>> v0.0.4
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

<<<<<<< HEAD
func schema_pkg_apis_tf_v1alpha1_ConfigClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigClusterStatus defines the observed state of ConfigCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_RabbitmqCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RabbitmqCluster is the Schema for the rabbitmqclusters API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RabbitmqClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_RabbitmqClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RabbitmqClusterSpec defines the desired state of RabbitmqCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_RabbitmqClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RabbitmqClusterStatus defines the observed state of RabbitmqCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_RedisCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RedisCluster is the Schema for the redisclusters API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.RedisClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_RedisClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RedisClusterSpec defines the desired state of RedisCluster",
				Properties: map[string]spec.Schema{
					"size": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"image": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"hostnetwork": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"imagepullpolicy": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"size", "hostnetwork", "imagepullpolicy"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_RedisClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RedisClusterStatus defines the observed state of RedisCluster",
				Properties: map[string]spec.Schema{
					"nodes": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"nodes"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_ZookeeperCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ZookeeperCluster is the Schema for the zookeeperclusters API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterSpec", "github.com/michaelhenkel/tungstenfabric-operator/pkg/apis/tf/v1alpha1.ZookeeperClusterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_tf_v1alpha1_ZookeeperClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ZookeeperClusterSpec defines the desired state of ZookeeperCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_tf_v1alpha1_ZookeeperClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ZookeeperClusterStatus defines the observed state of ZookeeperCluster",
=======
func schema_pkg_apis_tf_v1alpha1_VrouterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VrouterStatus defines the observed state of Vrouter",
>>>>>>> v0.0.4
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
